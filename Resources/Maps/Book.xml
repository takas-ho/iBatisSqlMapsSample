<?xml version="1.0" encoding="UTF-8" ?>
<sqlMap namespace="Book" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	
	<!-- =============================================
         エイリアス設定
           alias=短縮登録する名称
           type="完全修飾クラス名,アセンブリ名"
         =============================================   -->	
	<alias>
		<typeAlias alias="Book" type="IBatisSqlMapSample.Domain.Books.Book,IBatisSqlMapSample" />
	</alias>
	
	
	<!-- =============================================
         SELECT文の戻り(Result)の設定
           id=O/RマッピングISBN
           class=マッピング対象クラス
           result property=マッピング対象のプロパティ名
           result column=マッピング対象の列名
        =============================================   -->
	<resultMaps>
		<resultMap id="BookResult" class="Book">
			<result property="Isbn" column="ISBN" />
			<result property="Title" column="TITLE" />
			<result property="SaleDate" column="SALE_DATE" />
			<result property="Price" column="PRICE" />
		</resultMap>
	</resultMaps>
	
	
	<!-- =============================================
         SQL STATEMENTS の定義
           id=SQL名
           resultMap=O/RマッピングISBN
           parameterClass=バインド変数(#で囲まれた変数)の設定に使用するクラス
         =============================================   -->
	<statements>
	
		
		<!-- INSERT文 -->
		<insert id="InsertBook" parameterClass="Book">
			insert into BOOK
				(ISBN,TITLE,SALE_DATE,PRICE)
			values 
				(#Isbn#, #Title#, #SaleDate#,#Price#)
		</insert>

		
		
		
		<!-- UPDATE文 -->
		<update id="UpdateBook" parameterClass="Book">
			update BOOK 
			set TITLE = #Title#,
			SALE_DATE = #SaleDate#, 
			PRICE = #Price#
			where ISBN = #Isbn#
		</update>


		
		
		<!-- DELETE文：パラメータがプリミティブ型(int)のパターン -->
		<delete id="DeleteBook" parameterClass="System.Int32">
			delete from BOOK
			where ISBN = #value#
		</delete>
		
		<!-- DELETE文：パラメータがBookクラスのパターン -->
		<!--
		<delete id="DeleteBook" parameterClass="Book">
			delete from BOOK
			where ISBN = #Isbn#
		</delete>
		 -->
		
		

		<!-- SELECT文(1件取得)：戻りの型がresultClassのパターン -->
		<!-- resultClassでは、as によってマッピング先を指定します -->
		<select id="GetBookByIsbn" resultClass="Book" parameterClass="Book">
			select
				ISBN as Isbn,
				TITLE as Title,
				SALE_DATE as SaleDate,
				PRICE as Price
			from BOOK
			where ISBN = #Isbn#
		</select>		

		<!-- SELECT文(1件取得)：戻りの型がresultMapのパターン -->
		<!-- <select id="GetBookByIsbn" resultMap="BookResult" parameterClass="Book"> 
			select
				ISBN,
				TITLE,
				SALE_DATE,
				PRICE
			from BOOK
			where ISBN = #Isbn#
		</select>		
		-->				
		
		<!-- SELECT文(複数リスト取得)の共通文字列：extends(継承)用 -->
		<select id="GetBookList" resultMap="BookResult">
			select
				ISBN,
				TITLE,
				SALE_DATE,
				PRICE
			from BOOK
		</select>	
	
		<!-- SELECT文(複数リスト取得)：TITLE検索 -->
		<!-- 引数はプリミティブ型(System.String) -->
		<!-- $～$による直接置換 -->
		<select id="GetBookListByTitle" extends="GetBookList" resultMap="BookResult" parameterClass="System.String">
			where TITLE LIKE '%$VALUE$%'
			order by ISBN
		</select>
		
		<!-- SELECT文(複数リスト取得)：価格検索(ダイナミックSQL使用) -->
		<!-- 引数はハッシュテーブル -->
		<select id="GetBookListByPrice" extends="GetBookList" resultMap="BookResult" parameterClass="System.Collections.Hashtable">
			<dynamic prepend="where">
			
				<isEqual property="priceCompare" compareValue="以上">
				<![CDATA[
					PRICE >= #price#
				]]>
				</isEqual>
				<isEqual property="priceCompare" compareValue="以下">
				<![CDATA[
					PRICE <= #price#
				]]>
				</isEqual>
				
			</dynamic>
			order by PRICE
		</select>
		
	</statements>
</sqlMap>
